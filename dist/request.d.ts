import { s_inspect } from "./symbol";
import type { TAny } from "./types";
export declare class NodeRequest {
    raw?: TAny;
    constructor(input: RequestInfo, init?: RequestInit);
    constructor(input: RequestInfo, init?: RequestInit, raw?: TAny);
    private get rawBody();
    private get req();
    get cache(): RequestCache;
    get credentials(): RequestCredentials;
    get destination(): RequestDestination;
    get headers(): Headers;
    get integrity(): string;
    get keepalive(): boolean;
    get method(): any;
    get mode(): RequestMode;
    get redirect(): RequestRedirect;
    get referrer(): string;
    get referrerPolicy(): ReferrerPolicy;
    get signal(): AbortSignal;
    get url(): string;
    clone(): Request;
    get body(): ReadableStream<any>;
    get bodyUsed(): any;
    arrayBuffer(): Promise<ArrayBuffer>;
    blob(): Promise<Blob>;
    formData(): Promise<FormData>;
    json(): Promise<TAny>;
    text(): Promise<string>;
    get [Symbol.hasInstance](): string;
    [s_inspect](depth: number, opts: TAny, inspect: TAny): string;
    [k: string | symbol]: TAny;
}
